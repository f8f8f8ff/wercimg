fn conf_enable_img {
	if (~ $#posts_per_page 0)
		posts_per_page=5
	if (~ $#max_header_tags 0)
		max_header_tags=20
	img_url=$conf_wd # /
	img_root=`{pwd} # /var/www/werc/sites/server.local
	#dprint IMG_ROOT $img_root
	if (~ $#img_dir 0) { img_dir=`{pwd} }
	conf_enable_app img
}

fn img_init {
	if (~ $req_path $img_url) {
		if (~ $REQUEST_METHOD GET ) {
			if (~ $REQUEST_URI *'='*){
				load_get_args
				parse_get_args
			}
			#handler_body_main='img_display_gallery'
			handler_body_main=(tpl_handler `{get_lib_file img/gallery.tpl apps/img/gallery.tpl})
		}
		if (~ $REQUEST_METHOD POST ) {
			parse_post_args
			if (~ $a_func new_post){
				if (check_user && ! ~ $#logged_user 0)
					check_img_url
			}
		}
		if (~ $a_func edit_post delete_post){
			if (check_user && ! ~ $#logged_user 0){
				switch($a_func){
				case edit_post
					edit_post
				case delete_post
					delete_post
				}
				post_redirect $img_url
			}
		}
	}
	get_start
	get_stop
	get_tags
}

fn img_display_gallery {
	echo '<article>'
	if (check_user && ! ~ $#logged_user 0){
		echo '<form action="'$img_url'" method="post">
			<input type="hidden" name="a_func" value="new_post">
			<table>
			<tr><td>image:</td><td><input type="text" name="image" required></td></tr>
			<tr><td>link:</td><td><input type="text" name="link" ></td></tr>
			<tr><td>caption:</td><td><input type="text" name="caption" ></td></tr>
			<tr><td>tags:</td><td><input type="text" name="tags" ></td>
			<tr><td><input type="submit" name="submit" value="SUBMIT"</td></tr>
			</table>
		</form><br>'
	}

	# TODO: add edit button/form to delete, edit tags, caption, link
	get_post_list
	for (i in `{seq 1 $#posts}){
		a_id=$posts($i)
		a_dir=$img_root/src/$a_id
		echo '<div id="post">
		<div id="post_meta">'
		print_link
		print_tags
		echo ' |
		<span id="post_date">'
		cat $a_dir/date
		echo '</span>'
		echo '</div>'
		print_caption
		echo '<div id="post_img">'
		print_img
		echo '</div>
		</div>
		<br>'
	}
	display_prevnext
	echo '</article>'
}

fn display_image_gallery{
	get_post_list
	for (i in `{seq 1 $#posts}){
		a_id=$posts($i)
		a_dir=$img_root/src/$a_id
		echo '<div id="post">
		<div id="post_meta">'
		print_link
		print_tags
		echo ' |
		<span id="post_date">'
		cat $a_dir/date
		echo '</span>'
		print_edit_buttons
		print_caption
		echo '</div>'
		echo '<div id="post_img">'
		print_img
		echo '</div>
		</div>
		<br>'
	}
}

fn print_edit_buttons{
	if (check_user && ! ~ $#logged_user 0){
		edit='<a href="'$img_url'?a_id='$"a_id'&id='$"a_id'">edit</a>'
		delete='<a href="'$img_url'?a_id='$"a_id'&a_func=delete_post">delete</a>'
		echo '<br><span id="post_edit">('$"edit', '$"delete')</span>'
	}
}

fn edit_post {
	umask 002
	if (~ $#a_id 0){
		a_id=`{echo `{ls -p $img_root/src | sort -n | tail -1}^+1 | bc}
		if (~ $#a_id 0)
			a_id=1
		while (test -d $img_root/src/$a_id)
			a_id=`{echo $a_id^+1 | bc}
	}
	a_dir=$img_root/src/$a_id

	dprint EDIT_POST a_id: $a_id
	dprint EDIT_POST a_dir: $a_dir

	mkdir -p $a_dir/img $a_dir/tags

	# DATE
	if (~ $a_func new_post)
		date >$a_dir/date

	# TAGS
	rm -f $a_dir/tags/*
	{echo ',x/^'$a_id'\/.*\n/d'; echo w; echo q} | sam -d $img_root/tags >[2]/dev/null
	#dprint `{sed '/^'$a_id'\//d' $img_root/tags} # >$img_root/tags
	if (! ~ $#post_arg_tags 0){
		a_tags=`{echo $"post_arg_tags | sed 's/[^A-Za-z0-9_\- ]//g'}
		# put tags into list
		ifs=' '{a_tags=`{echo -n $a_tags}}
		{
			t=1
			while (test $t -le $#a_tags){
				# create tag files
				>$a_dir/tags/$a_tags($t)
				t=`{echo $t^+1 | bc}
			}
		}
		for (i in $a_tags)
			echo $a_id'/tags/'$i >>$img_root/tags
	}
	update_tags

	# CAPTION
	# TODO: escape html in caption + link?
	echo $"post_arg_caption >$a_dir/caption

	# LINK
	echo $"post_arg_link >$a_dir/link

	# IMAGE
	if (! ~ $#post_arg_image 0 && ~ $a_func new_post){
		a_img=`{echo $"post_arg_image | sed 's/\&.*$//g'}
		dprint a_img: $"a_img
		img=$a_dir/img/^`{date -n}^.^`{echo $"a_img |
			sed 's/^.*\.(gif|GIF)$/gif/g;
				s/^.*\.(jpg|jpeg|JPG|JPEG)$/jpg/g;
				s/^.*\.(png|PNG)$/png/g;
				s/^.*\.(tif|tiff|TIF|TIFF)$/tif/g'
		}
		thumb=$a_dir/img/small.^`{basename $img | sed 's/\..*$//g'}^.png
		dprint a_img: $"a_img
		curl $"a_img -s -o $img
		convert $img -auto-orient -resize '500x600>' $thumb
		rm `{ls $a_dir/img/small* | sed -n '2,$p'}
	}

	post_redirect $base_url^$img_url
}

fn update_tags{
	cat $img_root/tags | cut -f 3 -d '/' | sort | uniq -c | sort -nr | awk '{print $1 " " $2}' >$img_root/taglist
	cat $img_root/taglist | head -n $max_header_tags |
		#awk '{print "<a href=\"'$img_url'?tags="$2"\" class=\"header_tag\">"$2" ("$1")</a>"}' >$img_root/headertags
		awk '{print "<a href=\"'$img_url'?tags="$2"\" class=\"header_tag\">"$2"</a>"}' >$img_root/headertags
}

fn delete_post{
	a_dir=$img_root/src/$a_id
	if (test -d $a_dir){
		rm -rf $"a_dir &&
		{echo ',x/^'$a_id'\/.*\n/d'; echo w; echo q} | sam -d $img_root/tags >[2]/dev/null
		update_tags
	}
}

fn check_img_url{
	if (! ~ $#post_arg_image 0){
		#post_arg_image=`{echo $"post_arg_image | sed 's/\&.*$//g'}
		url_content_type=`{curl $"post_arg_image -I -s | grep -i 'content-type: image'}
		#echo 'Content-type: text/plain'; echo ''; exec echo yes $#url_content_type $"url_content_type
		if (! ~ $#url_content_type 0) {
			edit_post
		}
		if not {
			echo 'Content-type: text/plain'; echo ''; exec echo no image at url: $"post_arg_image
		}
	}
	if not{
		echo 'Content-type: text/plain'; echo ''; exec echo no url supplied
	}
}

fn load_get_args {
	if(~ $REQUEST_METHOD GET && ~ $#get_args 0 && ~ $REQUEST_URI *'='*){
		ifs='&' {
			a=`{echo $"REQUEST_URI | sed 's/(^\/|#.*$)//g'}
			for(pair in $a){
				ifs='=' { pair=`{echo -n $pair} }
				n='get_arg_'^`{echo $pair(1) | url_decode | tr -cd 'a-zA-Z0-9_'}
				get_args=( $get_args $n )
				ifs=() { $n=`{echo -n $pair(2) | url_decode | tr -d '^M'} }
			}
		}
		pair=()
	}
}


fn parse_get_args{ # stolen from barf
	if(! ~ $#get_arg_a_func 0)
		a_func=$get_arg_a_func
	if(! ~ $#get_arg_a_id 0)
		a_id=$get_arg_a_id
	if(! ~ $#get_arg_id 0)
		id=$get_arg_id
	if(! ~ $#get_arg_start 0)
		start=$get_arg_start
	if(! ~ $#get_arg_stop 0)
		stop=$get_arg_stop
	if(! ~ $#get_arg_tags 0)
		tags=$get_arg_tags
}

fn parse_post_args{
	if (! ~ $#post_arg_a_func 0)
		a_func=$post_arg_a_func
	if (! ~ $#post_arg_a_id 0)
		a_id=$post_arg_a_id
}

fn get_post_list{
	if (~ $id [0-9]*)
		posts=$id
	if not {
		# correct $stop... kinda sloppy
		# dprint GET_POST_LIST: $tags $start $stop
		posts=`{
			if (~ $tags all)
				ls -p $img_root/src |
					grep -e '^[0-9]*$' |
					sort -nr |
					sed -n $start^,^$stop^p
			if not
				grep -e '^.*\/'$tags'$' $img_root/tags |
					awk -F '/' '{print $1;}' |
					sort -nr |
					uniq |
					sed -n $start^,^$stop^p
		}
		if (! ~ $posts [0-9]*)
			posts=()
	}
	# dprint GET_POST_LIST: $#posts : $posts
}

fn get_start{
	start=`{echo $start | sed 's/[^0-9]//g'}
	if(~ $#start 0)
		start=1
}

fn get_stop{
	stop=`{echo $stop | sed 's/[^0-9]//g'}
	if(~ $#stop 0)
		stop=`{echo $start^+^$posts_per_page | bc}
}

fn get_tags{
	if(~ $#tags 0)
		tags=all
}

fn print_link{
	if (test -f $a_dir/link){
		ext_link=`{cat $a_dir/link}
		if (! ~ $#ext_link 0)
			ext_link=`{echo '(<a href="'$"ext_link'" target="_b">ext</a>)'}
		int_link=$img_url^'?id='^$a_id
		echo '<span id="post_link">'$"ext_link' <a href="'$"int_link'">link</a></span> |'
	}
}

fn print_caption{
	echo '<p id="post_caption">'
	cat $a_dir/caption
	echo '</p>'
}

fn print_tags{
	a_tags=`{ls -p $a_dir/tags}
	a_tags=`{for(t in $a_tags) echo '<a href="'$img_url'?tags='$t'">'$t'</a>, '}
	a_tags=`{echo $a_tags | awk '{print substr($0, 1, length($0) -1)}'}
	echo '<span id="post_tags">'$"a_tags'</span>'
}

fn print_img{
	a_img=`{ls -p $a_dir/img/[0-9]*}
	a_thumb=`{ls -p $a_dir/img/small*} #| sed 1q
	if(! ~ $#a_img 0)
		if(~ $#a_thumb 0)
			a_thumb=$a_img
	echo '<a href="'$img_url'src/'$a_id'/img/'$a_img'" target="_b">
	<img src="'$img_url'src/'$a_id'/img/'$a_thumb'" border="0"></a>'
}

fn print_header_tags{
	cat $img_root/headertags
}

fn display_edit_form{
	if (~ $#a_id 0)
		name=new_post
	if not{
		name=edit_post
		a_dir=$img_root/src/$a_id
		a_img=`{ls -p $a_dir/img | sed 1q}
		a_tags=`{ls -p $a_dir/tags}
		a_caption=`{cat $a_dir/caption}
		a_link=`{cat $a_dir/link}
	}

	echo '<form action="'$img_url'" method="post">
		<input type="hidden" name="a_func" value="'$"name'">'
	if (~ $name edit_post)
		echo '<input type="hidden" name="a_id" value="'$"a_id'">'
	echo '<table>'
	if (~ $name new_post)
		echo '<tr><td>image:</td><td><input type="text" name="image" required></td></tr>'
	echo '<tr><td>link:</td><td><input type="text" name="link" value="'$"a_link'"></td></tr>
		<tr><td>caption:</td><td><input type="text" name="caption" value="'$"a_caption'"></td></tr>
		<tr><td>tags:</td><td><input type="text" name="tags" value="'$"a_tags'"></td>
		<tr><td><input type="submit" name="submit" value="SUBMIT"</td></tr>
		</table>
	</form><br>'
}

fn display_prevnext{
	# TODO: fix prev/next/posts_per_page
	if(test $stop -gt `{echo 1+^$posts_per_page | bc}){
		nprev=`{echo $start^-1-^$posts_per_page | bc}
		prev='<span>
		<a href="'$base_url^$img_url'?tags='$"tags'&start='$"nprev'">prev</a> |
		</span>'
	}
	if(test $#posts -gt $posts_per_page){
		nnext=`{echo $stop^+1 | bc}
		next='<span>
		<a href="'$base_url^$img_url'?tags='$"tags'&start='$"nnext'">next</a>
		</span>'
	}
	echo '<div id="page_list">
	'$"prev'
	'$"next'
	</div>'
}
